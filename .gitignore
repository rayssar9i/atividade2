# Criado por https://www.toptal.com/developers/gitignore/api/python,windows,linux,macos,visualstudiocode
# Edite em https://www.toptal.com/developers/gitignore?templates=python,windows,linux,macos,visualstudiocode

### Linux ###
*~

# arquivos temporários que podem ser criados se um processo ainda tiver um identificador aberto de um arquivo excluído
.fuse_hidden*

# Preferências de diretório do KDE
.diretório

# Pasta de lixo do Linux que pode aparecer em qualquer partição ou disco
.Lixo-*

# Arquivos .nfs são criados quando um arquivo aberto é removido, mas ainda está sendo acessado
.nfs*

### Mac OS ###
# Em geral
.DS_Store
.AppleDouble
.LSOverride

# O ícone deve terminar com dois \r
Ícone


# Miniaturas
._*

# Arquivos que podem aparecer na raiz de um volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Lixos
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Diretórios potencialmente criados no compartilhamento AFP remoto
.AppleDB
.AppleDesktop
Pasta Lixo da Rede
Itens Temporários
.apdisk

### Patch macOS ###
# arquivos gerados pelo iCloud
*.icloud

### Pitão ###
# Arquivos compilados por byte / otimizados / DLL
__pycache__/
*.py[código]
*$py.class

# Extensões C
*.assim

# Distribuição / embalagem
.Pitão
construir/
desenvolver-ovos/
dist/
Transferências/
ovos/
.ovos/
lib/
lib64/
peças/
sdist/
var/
rodas/
compartilhar/rodas-python/
*.egg-info/
.instalado.cfg
*.ovo
MANIFESTO

# PyInstaller
# Geralmente esses arquivos são escritos por um script python de um modelo
# antes que o PyInstaller construa o exe, para injetar data/outras informações nele.
*.manifesto
*.spec

# Registros do instalador
pip-log.txt
pip-delete-this-directory.txt

# Relatórios de teste de unidade/cobertura
htmlcov/
.tox/
.nox/
.cobertura
.cobertura.*
.cache
nariztests.xml
cobertura.xml
*.cobrir
*.py,capa
.hipótese/
.pytest_cache/
cobrir/

# Traduções
*.mo
*.Panela

# Coisas do Django:
*.registro
local_settings.py
db.sqlite3
db.sqlite3-journal

# Material do frasco:
instância/
.webassets-cache

# Material fragmentado:
.scrapy

# Documentação do Sphinx
docs/_build/

# PyBuilder
.pybuilder/
alvo/

# Notebook Jupyter
.ipynb_checkpoints

# IPython
perfil_padrão/
ipython_config.py

#pyenv
# Para uma biblioteca ou pacote, você pode querer ignorar esses arquivos, pois o código é
# destinado a rodar em vários ambientes; caso contrário, verifique-os em:
# .python-version

# pipenv
# De acordo com pypa/pipenv#598, é recomendado incluir Pipfile.lock no controle de versão.
# No entanto, no caso de colaboração, se houver dependências ou dependências específicas da plataforma
# não tendo suporte multiplataforma, pipenv pode instalar dependências que não funcionam, ou não
# instale todas as dependências necessárias.
#Pipfile.lock

#poesia
# Semelhante ao Pipfile.lock, geralmente é recomendado incluir o poets.lock no controle de versão.
# Isso é especialmente recomendado para pacotes binários para garantir a reprodutibilidade e é mais
# comumente ignorado para bibliotecas.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poesia.lock

# pdm
# Semelhante ao Pipfile.lock, geralmente é recomendado incluir pdm.lock no controle de versão.
#pdm.lock
# pdm armazena configurações de todo o projeto em .pdm.toml, mas é recomendável não incluí-lo
# no controle de versão.
# https://pdm.fming.dev/#use-with-ide
.pdm.toml

#PEP 582; usado por, por exemplo, github.com/David-OConnor/pyflow e github.com/pdm-project/pdm
__pypackages__/

# Coisas de aipo
horário de aipo
celerybeat.pid

# Arquivos analisados ​​pelo SageMath
*.sage.py

# Ambientes
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Configurações do projeto Spyder
.spyderproject
.spyproject

# Configurações do projeto de corda
.ropeproject

# documentação mkdocs
/local

#mypy
.mypy_cache/
.dmypy.json
dmypy.json

# verificador de tipo de pira
.pira/

# analisador de tipo estático pytype
.pytype/

# Símbolos de depuração do Cython
cython_debug/

# PyCharm
# O modelo específico do JetBrains é mantido em um JetBrains.gitignore separado que pode
# pode ser encontrado em https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# e pode ser adicionado ao gitignore global ou mesclado neste arquivo. Por um mais nuclear
# opção (não recomendado) você pode descomentar o seguinte para ignorar toda a pasta de ideias.
#.idéia/

### Python Patch ###
# Arquivo de configuração local do Poetry - https://python-poetry.org/docs/configuration/#local-configuration
poesia.toml


### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Histórico local para código do Visual Studio
.história/

# Extensões de código do Visual Studio criadas
*.vsix

### Correção do VisualStudioCode ###
# Ignora todo o histórico local de arquivos
.história
.ionide

### Janelas ###
# Arquivos de cache de miniaturas do Windows
Thumbs.db
Thumbs.db:criptografável
ehthumbs.db
ehthumbs_vista.db

# Despejar arquivo
*.stackdump

# Arquivo de configuração da pasta
[Dd]esktop.ini

# Lixeira usada em compartilhamentos de arquivos
$RECYCLE.BIN/

# Arquivos do instalador do Windows
*.táxi
*.msi
*.msix
*.msm
*.msp

# Atalhos do Windows
*.lnk

# Fim de https://www.toptal.com/developers/gitignore/api/python,windows,linux,macos,visualstudiocode
